use v6.d;
use Test;
use Test::Output;
use RakuDoc::Render;

plan 8;

my $ast;
my $rv;
my RakuDoc::Processor $rdp .= new(:test);
# only test B as C H I J K R S T U V O are the same but different key words
$ast = Q:to/QAST/.AST;
    =begin rakudoc
    Some thingB<to be said>inside letters.
    =end rakudoc
    QAST
$rv = $rdp.render( $ast, :pre-finalised );
like $rv.body, /
    'Some thing' .*?
    '<basis>' .*? 'contents:' .*? '｢to be said｣' .*? '</basis>' .*?
    'inside letters.'
    /, 'B-markup works with text with spaces inside text';

$ast = Q:to/QAST/.AST;
    =begin rakudoc
    Some thing to B<say> in between words.
    =end rakudoc
    QAST
$rv = $rdp.render( $ast, :pre-finalised );
like $rv.body, /
    'Some thing to '
    '<basis>' .*? 'contents:' .*? '｢say｣' .+? '</basis>' .*?
    ' in between words.'
    /, 'B-markup works with space';

$ast = Q:to/QAST/.AST;
    =begin rakudoc
    Some thingZ<to be said>inside letters.
    =end rakudoc
    QAST
$rv = $rdp.render( $ast, :pre-finalised );
like $rv.body, /
    'Some thinginside letters.'
    /, 'Z-markup works with text with spaces inside text';

$ast = Q:to/QAST/.AST;
    =begin rakudoc
    Some thing to Z<say> in between words.
    =end rakudoc
    QAST
$rv = $rdp.render( $ast, :pre-finalised );
like $rv.body, /
    'Some thing to  in between words.'
    /, 'Z-markup works with space';

$ast = Q:to/QAST/.AST;
    =begin rakudoc
    Raku makes considerable use of the E<0xAB;0xBB> characters.
    =end rakudoc
    QAST
$rv = $rdp.render( $ast, :pre-finalised );
like $rv.body, /
    'Raku makes' .+
    '<entity>' .*? 'contents: ｢«»｣' .*? '</entity>' .*? 'characters'
    /, 'E-markup ';
$ast = Q:to/QAST/.AST;
    =begin rakudoc
    Some thingB<to be said>inside letters.
    And also I<in italics>.
    =end rakudoc
    QAST
$rdp.verbose('markup-I');
my $out = output-from {
    $rv = $rdp.render( $ast, :pre-finalised );
};
like $out, / '<important>' .*? 'in italics' .+ '</important>'
    /, 'the template result for I is output';
unlike $out, /
    '<basis>' .*? 'contents:' .*? '｢to be said｣' .*? '</basis>' .*?
    /, 'template result for B is not output';
like $rv.body, /
    'Some thing' .*?
    '<basis>' .*? 'contents:' .*? '｢to be said｣' .*? '</basis>' .*?
    'inside letters.' \s*
    'And also' .+? '<important>' .*? 'in italics'
    /, 'B & I works with text with spaces inside text';

done-testing;
